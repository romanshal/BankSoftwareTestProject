x-db-env: &db-env
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

services:
  postgres:
    container_name: postgres
    environment:
      <<: *db-env
      POSTGRES_DB: banksoftware-db
    restart: always
    ports:
        - "5432:5432"
    volumes:
      - postgres_banksoftware:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  backend:
    container_name: backend 
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "https://+:443;http://+:80"
      "ConnectionStrings:BankDbConnection": "Server=postgres;Port=5432;Database=banksoftware-db;User Id=postgres;Password=postgres;"
    ports:
      - "8000:80"
      - "9000:443"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  frontend:
    container_name: frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3